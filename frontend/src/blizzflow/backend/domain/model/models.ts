// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as time$0 from "../../../../time/models.js";

export class License {
    "ID": number;
    "Key": string;
    "Username": string;
    "ExpiresAt": time$0.Time;
    "Fingerprint": string;
    "CreatedAt": time$0.Time;

    /** Creates a new License instance. */
    constructor($$source: Partial<License> = {}) {
        if (!("ID" in $$source)) {
            this["ID"] = 0;
        }
        if (!("Key" in $$source)) {
            this["Key"] = "";
        }
        if (!("Username" in $$source)) {
            this["Username"] = "";
        }
        if (!("ExpiresAt" in $$source)) {
            this["ExpiresAt"] = null;
        }
        if (!("Fingerprint" in $$source)) {
            this["Fingerprint"] = "";
        }
        if (!("CreatedAt" in $$source)) {
            this["CreatedAt"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new License instance from a string or object.
     */
    static createFrom($$source: any = {}): License {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new License($$parsedSource as Partial<License>);
    }
}

/**
 * Session represents a user session in the application.
 */
export class Session {
    "ID": number;
    "UserID": number;
    "CreatedAt": time$0.Time;

    /** Creates a new Session instance. */
    constructor($$source: Partial<Session> = {}) {
        if (!("ID" in $$source)) {
            this["ID"] = 0;
        }
        if (!("UserID" in $$source)) {
            this["UserID"] = 0;
        }
        if (!("CreatedAt" in $$source)) {
            this["CreatedAt"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Session instance from a string or object.
     */
    static createFrom($$source: any = {}): Session {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Session($$parsedSource as Partial<Session>);
    }
}

/**
 * User represents a user profile in the system.
 */
export class User {
    "ID": number;
    "Username": string;
    "PasswordHash": string;

    /** Creates a new User instance. */
    constructor($$source: Partial<User> = {}) {
        if (!("ID" in $$source)) {
            this["ID"] = 0;
        }
        if (!("Username" in $$source)) {
            this["Username"] = "";
        }
        if (!("PasswordHash" in $$source)) {
            this["PasswordHash"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new User instance from a string or object.
     */
    static createFrom($$source: any = {}): User {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new User($$parsedSource as Partial<User>);
    }
}
